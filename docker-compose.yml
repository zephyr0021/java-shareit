services:
  gateway:
    build: shareIt-gateway
    image: shareit-gateway
    container_name: shareit-gateway
    ports:
      - "8080:8080"
    depends_on:
      - server
    environment:
      - SHAREIT_SERVER_URL=http://server:9090

  server:
    build: shareIt-server
    image: shareit-server
    container_name: shareit-server
    ports:
      - "9090:9090"
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/shareit
      - SPRING_DATASOURCE_USERNAME=dbuser
      - SPRING_DATASOURCE_PASSWORD=12345

  db:
    image: postgres:16.1
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=12345
      - POSTGRES_USER=dbuser
      - POSTGRES_DB=shareit
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  db-init:
    image: postgres:16.1
    container_name: db-init
    depends_on:
      db:
        condition: service_healthy
    entrypoint:
      - bash
      - -c
      - |
        set -e
        psql postgresql://dbuser:12345@db:5432/shareit -v ON_ERROR_STOP=1 <<-EOSQL
        CREATE TABLE IF NOT EXISTS users (
          id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
          name VARCHAR(100) NOT NULL,
          email VARCHAR(100) NOT NULL UNIQUE
        );
        
        CREATE TABLE IF NOT EXISTS items (
          id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
          name VARCHAR(200) NOT NULL,
          description VARCHAR(1000) NOT NULL,
          is_available BOOLEAN NOT NULL,
          user_id BIGINT REFERENCES users(id) ON DELETE CASCADE,
          request_id BIGINT
        );
        
        CREATE TABLE IF NOT EXISTS bookings (
          id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
          booking_start TIMESTAMP WITHOUT TIME ZONE,
          booking_end TIMESTAMP WITHOUT TIME ZONE,
          item_id BIGINT REFERENCES items(id) ON DELETE CASCADE,
          booker_id BIGINT REFERENCES users(id) ON DELETE CASCADE,
          status VARCHAR(20) NOT NULL DEFAULT 'WAITING',
          CONSTRAINT booking_end_after_start CHECK (booking_end > booking_start),
          CONSTRAINT booking_valid_status CHECK (status IN ('WAITING', 'APPROVED', 'REJECTED', 'CANCELLED'))
        );
        
        CREATE TABLE IF NOT EXISTS comments (
          id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
          text VARCHAR(1000) NOT NULL,
          item_id BIGINT REFERENCES items(id) ON DELETE CASCADE,
          author_id BIGINT REFERENCES users(id) ON DELETE CASCADE,
          created TIMESTAMP WITHOUT TIME ZONE
        );
        
        CREATE TABLE IF NOT EXISTS requests (
          id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
          description VARCHAR(500) NOT NULL,
          requestor_id BIGINT REFERENCES users(id) ON DELETE CASCADE,
          created TIMESTAMP WITHOUT TIME ZONE
        );
        EOSQL